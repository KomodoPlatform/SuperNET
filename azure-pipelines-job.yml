# Job template for MM2 build

parameters:
  name: ''  # defaults for any parameters that aren't specified
  os: ''

jobs:
  - job: ${{ parameters.name }}
    timeoutInMinutes: 0 # 0 means infinite for self-hosted agent
    pool:
      name: Default
      demands: agent.os -equals ${{ parameters.os }}
    steps:
      - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
        clean: false # don't clean up to use previously built dependencies
      - powershell: |
          .\marketmaker_build_depends.cmd
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: Build Windows deps
      - bash: |
          if [ $AGENT_OS = "Linux" ]
          then
            export PATH=$PATH:/root/.cargo/bin
          fi
      #    touch mm2src/common/build.rs
          cargo build -vv
          rm -rf upload
          mkdir upload
        displayName: 'Build MM2'
      - bash: |
          cp -r target/debug/mm2 upload/mm2-$(COMMIT_HASH)-$(Agent.OS)
        condition: ne( variables['Agent.OS'], 'Windows_NT' )
        displayName: 'Prepare upload Linux/MacOS'
      - powershell: |
          7z a .\upload\mm2-win-$(COMMIT_HASH).zip .\target\debug\mm2.exe .\target\debug\*.dll "$Env:windir\system32\msvcr100.dll" "$Env:windir\system32\msvcp140.dll" "$Env:windir\system32\vcruntime140.dll"
        condition: eq( variables['Agent.OS'], 'Windows_NT' )
        displayName: 'Prepare upload Windows'
      - bash: |
          if [ $AGENT_OS = "Linux" ]
          then
            export PATH=$PATH:/root/.cargo/bin
          fi
          cargo test alice_can_see_the_active_order_after_connection -- --nocapture
      #    cargo test -- --nocapture
        displayName: 'Test MM2'
      # Copy Files Over SSH
      # Copy files or build artifacts to a remote machine over SSH
      # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/copy-files-over-ssh?view=vsts
      - task: CopyFilesOverSSH@0
        inputs:
          sshEndpoint: nightly_build_server
          sourceFolder: 'upload' # Optional
          contents: "**"
          targetFolder: "uploads/$(Build.SourceBranchName)" # Optional
          #cleanTargetFolder: false # Optional
          #overwrite: true # Optional
          #failOnEmptySource: false # Optional
          #flattenFolders: false # Optional
        displayName: 'Upload nightly'